@model OrderStatisticsViewModel
@{
    ViewData["Title"] = "Thống kê đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

}

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Tổng quan đơn hàng</h1>
    </div>

    <!-- Summary Cards -->

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-lg-start">
                    <i class="fas fa-filter mr-1"></i>
                    <h6 class="m-0 font-weight-bold text-primary">Tìm kiếm theo khoảng thời gian</h6>
                </div>
                <div class="card-body">
                    <form asp-action="OrderStatistics" method="get" class="row">
                        <div class="col-md-4">
                            <label for="startDate" class="form-label">Từ ngày</label>
                            <input type="date" class="form-control" id="startDate" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")">
                        </div>
                        <div class="col-md-4">
                            <label for="endDate" class="form-label">Đến ngày</label>
                            <input type="date" class="form-control" id="endDate" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")">
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary">Áp dụng</button>
                            <a href="@Url.Action("OrderStatistics")" class="btn btn-outline-secondary ml-2">Đặt lại</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row d-flex">
        <div class="col-xl-2 col-md-6 d-flex align-items-stretch">
            <div class="card bg-primary text-white mb-4 w-100">
                <div class="card-body">
                    <h6>Tổng đơn hàng</h6>
                    <h2>@Model.TotalOrders</h2>
                </div>
            </div>
        </div>
        <div class="col-xl-2 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <h6>Đơn hoàn thành</h6>
                    <h2>@Model.CompletedOrders</h2>
                    <div class="small">@(Model.TotalOrders > 0 ? Math.Round((double)Model.CompletedOrders / Model.TotalOrders * 100, 2) : 0)%</div>
                </div>
            </div>
        </div>
        <div class="col-xl-2 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">
                    <h6>Chờ xác nhận</h6>
                    <h2>@Model.PendingOrders</h2>
                    <div class="small">@(Model.TotalOrders > 0 ? Math.Round((double)Model.PendingOrders / Model.TotalOrders * 100, 2) : 0)%</div>
                </div>
            </div>
        </div>
        <div class="col-xl-2 col-md-6">
            <div class="card bg-secondary text-white mb-4">
                <div class="card-body">
                    <h6>Đã xác nhận</h6>
                    <h2>@Model.ConfirmeOrder</h2>
                    <div class="small">@(Model.TotalOrders > 0 ? Math.Round((double)Model.ConfirmeOrder / Model.TotalOrders * 100, 2) : 0)%</div>
                </div>
            </div>
        </div>
        <div class="col-xl-2 col-md-6">
            <div class="card bg-danger text-white mb-4">
                <div class="card-body">
                    <h6>Đơn đã hủy</h6>
                    <h2>@Model.CancelledOrders</h2>
                    <div class="small">@(Model.TotalOrders > 0 ? Math.Round((double)Model.CancelledOrders / Model.TotalOrders * 100, 2) : 0)%</div>
                </div>
            </div>
        </div>
        <div class="col-xl-2 col-md-6">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">
                    <h6>Đơn đang giao</h6>
                    <h2>@Model.ShippingOrders</h2>
                    <div class="small">@(Model.TotalOrders > 0 ? Math.Round((double)Model.ShippingOrders / Model.TotalOrders * 100, 2) : 0)%</div>
                </div>
            </div>
        </div>
    </div> 




    <div class="row">
        <!-- Cột trái: gồm 2 card xếp dọc -->
        <div class="col-xl-6 d-flex flex-column">
            <!-- Đơn hàng 30 ngày qua -->
            <div class="card shadow mb-4 w-100">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-lg-start">
                    <i class="fas fa-chart-area mr-1"></i>
                    <h6 class="m-0 font-weight-bold text-primary">Đơn hàng 30 ngày qua</h6>
                </div>
                <div class="card-body">
                    <canvas id="ordersByDateChart" width="100%" height="60"></canvas>
                </div>
            </div>

            <!-- Giá trị đơn hàng trung bình -->
            <div class="card shadow mb-4 w-100">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-lg-start">
                    <i class="fas fa-money-bill mr-1"></i>
                    <h6 class="m-0 font-weight-bold text-primary">Giá trị đơn hàng trung bình</h6>
                </div>
                <div class="card-body text-center">
                    <h3 class="text-primary">@Model.AverageOrderValue.ToString("N0") đ</h3>
                    <p class="text-muted">Tính trên tổng đơn hàng không bị hủy</p>
                </div>
            </div>
        </div>

        <!-- Cột phải: biểu đồ tròn -->
        <div class="col-xl-6 d-flex">
            <div class="card shadow mb-4 w-100">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-lg-start">
                    <i class="fas fa-chart-pie mr-1"></i>
                    <h6 class="m-0 font-weight-bold text-primary">Phân bố đơn hàng</h6>
                </div>
                <div class="card-body d-flex justify-content-center align-items-center">
                    <canvas id="orderDistributionChart" width="100%" height="60"></canvas>
                </div>
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-xl-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-lg-start">
                    <i class="fas fa-tasks mr-1"></i>
                    <h6 class="m-0 font-weight-bold text-primary">Doanh thu theo ngày</h6>
                </div>
                <div class="card-body">
                    <canvas id="revenueByDateChart" width="100%" height="30"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-lg-start">
            <i class="fas fa-table mr-1"></i>
            <h6 class="m-0 font-weight-bold text-primary">Chi tiết đơn hàng theo ngày</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="myTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Ngày</th>
                            <th>Số đơn hàng</th>
                            <th>Doanh thu</th>
                            <th>Doanh thu trung bình/đơn</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.OrdersByDate.OrderByDescending(o => o.Date))
                        {
                            <tr class="text-center">
                                <td>@order.Date.ToString("dd/MM/yyyy")</td>
                                <td>@order.OrderCount</td>
                                <td>@order.Revenue.ToString("N0") đ</td>
                                <td>@(order.OrderCount > 0 ? (order.Revenue / order.OrderCount).ToString("N0") : "0") đ</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    
</div>

@section Scripts {
    <script src="~/adminlib/vendor/chart.js/chart.bundle.js"></script>
    <script src="~/adminlib/vendor/chart.js/chart.js"></script>
    <script>
        // Orders by date chart
        var orderCtx = document.getElementById('ordersByDateChart').getContext('2d');
        var orderChart = new Chart(orderCtx, {
            type: 'line',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.OrdersByDate.OrderBy(o => o.Date).Select(x => $"'{x.Date.ToString("dd/MM")}'").ToArray()))],
                datasets: [{
                    label: 'Số đơn hàng',
                    data: [@string.Join(",", Model.OrdersByDate.OrderBy(o => o.Date).Select(x => x.OrderCount).ToArray())],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 2,
                    tension: 0.1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                }
            }
        });

        // Order distribution chart
        var distributionCtx = document.getElementById('orderDistributionChart').getContext('2d');
        var distributionChart = new Chart(distributionCtx, {
            type: 'pie',
            data: {
                labels: ['Hoàn thành', 'Chờ xác nhận', 'Đã hủy', 'Đang giao','Đã xác nhận','Thanh toán thất bại'],
                datasets: [{
                    data: [
        @Model.CompletedOrders,
        @Model.PendingOrders,
        @Model.CancelledOrders,
        @Model.ShippingOrders,
        @Model.ConfirmeOrder,
        @Model.PaymentFailed,
                        ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)',
                        'rgba(255, 206, 86, 0.5)',
                        'rgba(75, 192, 192, 0.5)',
                        'rgba(153, 102, 255, 0.5)',
                        'rgba(255, 159, 64, 0.5)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                    ],
                    borderWidth: 1
                }]
            }
        });

        // Revenue by date chart
        var revenueCtx = document.getElementById('revenueByDateChart').getContext('2d');
        var revenueChart = new Chart(revenueCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.OrdersByDate.OrderBy(o => o.Date).Select(x => $"'{x.Date.ToString("dd/MM")}'").ToArray()))],
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: [@string.Join(",", Model.OrdersByDate.OrderBy(o => o.Date).Select(x => x.Revenue.ToString(System.Globalization.CultureInfo.InvariantCulture)).ToArray())],
                    backgroundColor: 'rgba(75, 192, 192, 0.6)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero : true,
                        min: 0,
                        ticks: {
                            callback: function (value) {
                                // Định dạng tiền tệ VNĐ với dấu chấm phân cách hàng nghìn
                                return value.toLocaleString('vi-VN') + ' đ';
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                // Định dạng tooltip hiển thị tiền tệ
                                return context.dataset.label + ': ' + context.raw.toLocaleString('vi-VN') + ' đ';
                            }
                        }
                    }
                }
            }
        });


    </script>

}