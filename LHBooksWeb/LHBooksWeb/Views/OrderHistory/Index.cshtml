@model IEnumerable<Order>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container py-5">
    <main aria-labelledby="title" style="margin-top: 120px;">
        <div>
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb bg-light p-3 rounded">
                    <li class="breadcrumb-item">
                        <a href="/" >Trang chủ</a>
                    </li>
                    <li class="breadcrumb-item " aria-current="page">Lịch sử mua hàng</li>
                </ol>
            </nav>

            <h2 class="mb-4">Lịch sử mua hàng</h2>

            <div class="card shadow-sm rounded-4">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0" id="myTable">
                            <thead class="table-light">
                                <tr class="text-center">
                                    <th scope="col">Mã đơn hàng</th>
                                    <th scope="col">Ngày đặt</th>
                                    <th scope="col">Tổng tiền</th>
                                    <th scope="col">Trạng thái</th>
                                    <th scope="col" class="text-center">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model)
                                {
                                    <tr class="text-center">
                                        <td>@order.Code</td>
                                        <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@order.TotalAmount.ToString("n0") ₫</td>
                                        <td>
                                            @{
                                                string statusClass = order.Status switch
                                                {
                                                    OrderStatus.AwaitingPayment => "text-warning",
                                                    OrderStatus.PaymentFailed => "text-danger",
                                                    OrderStatus.Pending => "text-secondary",
                                                    OrderStatus.Confirmed => "text-info",
                                                    OrderStatus.Shipping => "text-primary",
                                                    OrderStatus.Delivered => "text-success",
                                                    OrderStatus.Cancelled => "text-danger",
                                                    OrderStatus.Paid => "text-success",
                                                    _ => "text-secondary"
                                                };
                                            }
                                            <span class="@statusClass" style="font-size:16px !important">
                                                @order.Status.GetDisplayName()
                                            </span>
                                        </td>

                                        <td class="text-center">
                                            <a class="btn btn-sm btn-outline-primary rounded-pill" asp-action="Details" asp-route-id="@order.Id">
                                                Xem chi tiết
                                            </a>
                                            @if (order.Status == OrderStatus.Pending)
                                            {
                                                <button class="btn btn-sm btn-outline-danger rounded-pill cancelOrderButton" data-id="@order.Id">
                                                    Hủy đơn hàng
                                                </button>
                                            }

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </main>
</div>
@section Scripts {
    <script>
        document.querySelectorAll(".cancelOrderButton").forEach(button => {
            button.addEventListener("click", function () {
                const orderId = this.getAttribute("data-id");

                Swal.fire({
                    title: 'Bạn có chắc chắn muốn hủy đơn hàng?',
                    text: "Đơn hàng này sẽ không thể phục hồi!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Hủy đơn hàng',
                    cancelButtonText: 'Hủy'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Lấy AntiForgeryToken từ input ẩn
                        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                        fetch('/OrderHistory/CancelOrder', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: `orderId=${orderId}&__RequestVerificationToken=${encodeURIComponent(token)}`
                        })
                            .then(response => {
                                if (response.ok) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Đơn hàng đã được hủy.',
                                        showConfirmButton: false,
                                        timer: 1500
                                    }).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    throw new Error("Không thể hủy đơn hàng.");
                                }
                            })
                            .catch(() => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi',
                                    text: 'Đã có lỗi xảy ra. Vui lòng thử lại.'
                                });
                            });
                    }
                });
            });
        });
    </script>
}